<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://30somethingprogrammer.github.io/luxforge/feed.xml" rel="self" type="application/atom+xml" /><link href="https://30somethingprogrammer.github.io/luxforge/" rel="alternate" type="text/html" /><updated>2025-09-22T17:30:06+01:00</updated><id>https://30somethingprogrammer.github.io/luxforge/feed.xml</id><title type="html">LuxForge</title><subtitle>Narrative incident logs and homelab insights from ShinxLab</subtitle><author><name>LuxForge</name><email>t@b.c</email></author><entry><title type="html">Verified Deployments to GitHub</title><link href="https://30somethingprogrammer.github.io/luxforge/2025/09/22/verified-github-commits.html" rel="alternate" type="text/html" title="Verified Deployments to GitHub" /><published>2025-09-22T17:20:00+01:00</published><updated>2025-09-22T17:20:00+01:00</updated><id>https://30somethingprogrammer.github.io/luxforge/2025/09/22/verified-github-commits</id><content type="html" xml:base="https://30somethingprogrammer.github.io/luxforge/2025/09/22/verified-github-commits.html"><![CDATA[<p>LuxForge now deploys with a verified signature. This post outlines how to ensure future deploys inherit the same signature.</p>

<hr />

<h2 id="outline">Outline</h2>

<ul>
  <li>‚úÖ Git identity corrected from placeholder to the user identinty (our case, <code class="language-plaintext highlighter-rouge">lux-forge</code>)</li>
  <li>
    <h2 id="-commits-now-show-the-verified-badge-on-github">‚úÖ Commits now show the <strong>Verified</strong> badge on GitHub</h2>
  </li>
</ul>

<h2 id="Ô∏è-how-to-verified-github-commits">üõ†Ô∏è How to: Verified GitHub Commits</h2>

<p>To get the <strong>Verified</strong> badge on commits:</p>

<ol>
  <li><strong>Generate a GPG key</strong>:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpg <span class="nt">--full-generate-key</span>
</code></pre></div>    </div>
  </li>
  <li><strong>List your key</strong>:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpg <span class="nt">--list-secret-keys</span> <span class="nt">--keyid-format</span> LONG
</code></pre></div>    </div>

    <p>Look for the long string after <code class="language-plaintext highlighter-rouge">rsa4096/</code>‚Äîthat‚Äôs your key ID.</p>
  </li>
  <li><strong>Export your public key</strong>:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpg <span class="nt">--armor</span> <span class="nt">--export</span> YOUR_KEY_ID
</code></pre></div>    </div>
    <p>Copy the entire key</p>
  </li>
  <li><strong>Add it to GitHub</strong>:<br />
Go to <a href="https://github.com/settings/keys">GitHub ‚Üí User Icon ‚Üí Settings ‚Üí SSH and GPG keys</a> ‚Üí <strong>New GPG key</strong>
 Paste the key</li>
  <li><strong>Configure Git to sign commits</strong>:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config <span class="nt">--global</span> user.signingkey YOUR_KEY_ID
git config <span class="nt">--global</span> commit.gpgsign <span class="nb">true</span>
</code></pre></div>    </div>
  </li>
  <li><strong>Test it</strong>:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git commit <span class="nt">-S</span> <span class="nt">-m</span> <span class="s2">"Signed LuxForge deploy"</span>
</code></pre></div>    </div>
  </li>
</ol>

<p>Your commits will now show the <strong>Verified</strong> badge on GitHub.</p>

<hr />

<h2 id="summary">Summary</h2>

<p>We all like big green signs and the Verified one is no different. Not only that but it also ensures future deployments are secure. Lovely.</p>

<hr />]]></content><author><name>LuxForge</name><email>t@b.c</email></author><category term="luxforge-ui" /><category term="git-signing" /><category term="verified-badge" /><summary type="html"><![CDATA[LuxForge now deploys with a verified signature. This post outlines how to ensure future deploys inherit the same signature.]]></summary></entry><entry><title type="html">The Syntax That Broke the Skin: SCSS and the Silent Fail</title><link href="https://30somethingprogrammer.github.io/luxforge/2025/09/20/scss-theme-breakthrough.html" rel="alternate" type="text/html" title="The Syntax That Broke the Skin: SCSS and the Silent Fail" /><published>2025-09-20T21:06:00+01:00</published><updated>2025-09-20T21:06:00+01:00</updated><id>https://30somethingprogrammer.github.io/luxforge/2025/09/20/scss-theme-breakthrough</id><content type="html" xml:base="https://30somethingprogrammer.github.io/luxforge/2025/09/20/scss-theme-breakthrough.html"><![CDATA[<p>Irony at its finest. While trying to come up with a new way of adding a blog in an ‚Äúeasy fashion‚Äù I of course made things 10 times harder by trying to learn a new software in github pages. Figuring it can‚Äôt be that hard, I forged ahead and looked into making it look sleek. I found a brilliant post that was ~ 5 years old in a blog called the (Slowbro blog)[https://blog.slowb.ro/dark-theme-for-minima-jekyll/]. Knowing I primarily use a windows machine for my own use, I don‚Äôt natrually have a Linux machine to work with. So, natrually, I had to come up to speed with the usability of WSL too.</p>

<p>Some 5 hours later, I was almost there. Jekyll was installed on my new Ubuntu 22.04 WSL kernel attached to a VSCode instance to make modifying the files just that bit easier. As a programmer, I am natrually lazy so I wanted to find a way of automating the version control and changelog. Well, here we are with another post. Will it last? Who knows. But I learnt something new and, lets be honest, thats what a homelab is all about.</p>

<p>Logged in <code class="language-plaintext highlighter-rouge">.forge-history</code>, stamped in v1.0.2, and burned into LuxForge‚Äôs memory.</p>

<hr />

<p><strong>Tags:</strong></p>

<p><a href="/tags/incident">incident</a></p>

<p><a href="/tags/scss">scss</a></p>

<p><a href="/tags/theme">theme</a></p>

<p><a href="/tags/luxforge">luxforge</a></p>

<p><a href="/tags/dark-mode">dark-mode</a></p>

<p><strong>Related:</strong></p>

<ul>
  <li><a href="https://github.com/30-something-programmer/luxforge.github.io/blob/main/CHANGELOG.md">LuxForge Changelog</a></li>
  <li>[Commit <latest hash="">](https://github.com/30-something-programmer/luxforge.github.io/commit/<latest hash="">)</latest></latest></li>
</ul>]]></content><author><name>LuxForge</name><email>t@b.c</email></author><category term="incident" /><category term="scss" /><category term="theme" /><category term="luxforge" /><category term="dark-mode" /><summary type="html"><![CDATA[Irony at its finest. While trying to come up with a new way of adding a blog in an ‚Äúeasy fashion‚Äù I of course made things 10 times harder by trying to learn a new software in github pages. Figuring it can‚Äôt be that hard, I forged ahead and looked into making it look sleek. I found a brilliant post that was ~ 5 years old in a blog called the (Slowbro blog)[https://blog.slowb.ro/dark-theme-for-minima-jekyll/]. Knowing I primarily use a windows machine for my own use, I don‚Äôt natrually have a Linux machine to work with. So, natrually, I had to come up to speed with the usability of WSL too.]]></summary></entry><entry><title type="html">The Rule That Slipped Through: pfSense and the Floating Ghost</title><link href="https://30somethingprogrammer.github.io/luxforge/2025/09/20/firewall-rule-divergence.html" rel="alternate" type="text/html" title="The Rule That Slipped Through: pfSense and the Floating Ghost" /><published>2025-09-20T20:48:00+01:00</published><updated>2025-09-20T20:48:00+01:00</updated><id>https://30somethingprogrammer.github.io/luxforge/2025/09/20/firewall-rule-divergence</id><content type="html" xml:base="https://30somethingprogrammer.github.io/luxforge/2025/09/20/firewall-rule-divergence.html"><![CDATA[<p>It started with a shrug. VLAN 30 was supposed to be locked down‚Äîtight, clean, no cross-talk. But something slipped through. I caught it during a routine packet capture, just a flicker of traffic that shouldn‚Äôt have been there. At first, I thought it was a misfire in the rule set. Maybe I‚Äôd forgotten to apply the block to the right interface. But everything looked clean.</p>

<p>pfSense said the rule matched. The logs agreed. And yet, the traffic flowed.</p>

<p>I dug deeper. Interface bindings, rule order, floating rules. That‚Äôs when I found it‚Äîthe ghost. A floating rule, long forgotten, silently overriding the interface-specific block. It wasn‚Äôt malicious. Just‚Ä¶ legacy. A leftover from an earlier experiment, now quietly sabotaging the present.</p>

<p>I stripped it out. Rebuilt the rule set. Captured again. Silence. The block held.</p>

<p>This wasn‚Äôt just a fix. It was a reminder: pfSense‚Äôs rule evaluation isn‚Äôt always intuitive. Floating rules can override without warning. And in a multi-VLAN setup, ghosts linger.</p>

<p>This incident is logged in <code class="language-plaintext highlighter-rouge">.forge-history</code>, stamped in v1.0.1, and burned into LuxForge‚Äôs memory.</p>

<hr />

<p><strong>Tags:</strong></p>

<p><a href="/tags/incident/">incident</a>,</p>

<p><a href="/tags/pfsense/">pfsense</a>,</p>

<p><a href="/tags/firewall/">firewall</a>,</p>

<p><a href="/tags/homelab/">homelab</a>,</p>

<p><a href="/tags/luxforge/">luxforge</a></p>

<p><strong>Related:</strong></p>

<ul>
  <li><a href="https://github.com/30-something-programmer/luxforge.github.io/blob/main/CHANGELOG.md">LuxForge Changelog</a></li>
  <li><a href="https://github.com/30-something-programmer/luxforge.github.io/commit/b664c4b">Commit b664c4b</a></li>
</ul>]]></content><author><name>LuxForge</name><email>t@b.c</email></author><category term="incident" /><category term="pfsense" /><category term="firewall" /><category term="homelab" /><category term="luxforge" /><summary type="html"><![CDATA[It started with a shrug. VLAN 30 was supposed to be locked down‚Äîtight, clean, no cross-talk. But something slipped through. I caught it during a routine packet capture, just a flicker of traffic that shouldn‚Äôt have been there. At first, I thought it was a misfire in the rule set. Maybe I‚Äôd forgotten to apply the block to the right interface. But everything looked clean.]]></summary></entry></feed>